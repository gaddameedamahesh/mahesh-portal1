pipeline {
    agent any

    tools {
        maven 'maven3'
        jdk 'java17'   // Change this to the exact JDK name configured in Jenkins (Manage Jenkins â†’ Global Tool Configuration)
    }

    environment {
        MVN_HOME = tool 'maven3'
        JAVA_HOME = tool 'java17'   // Must match the JDK name from Jenkins
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main',
                    url: 'https://github.com/gaddameedamahesh/mahesh-portal1.git',
                    credentialsId: 'github-creds'
            }
        }

        stage('Build') {
            steps {
                script {
                    sh "${MVN_HOME}/bin/mvn clean install"
                }
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('MySonarQubeServer') {   // Replace with the exact SonarQube server name in Jenkins
                    sh "${MVN_HOME}/bin/mvn sonar:sonar"
                }
            }
        }

        stage('Upload to Nexus') {
            steps {
                script {
                    sh """
                    ${MVN_HOME}/bin/mvn deploy:deploy-file \
                      -DgroupId=devops \
                      -DartifactId=mahesh-portal \
                      -Dversion=1.0-SNAPSHOT \
                      -Dpackaging=war \
                      -Dfile=target/mahesh-portal.war \
                      -DrepositoryId=nexus \
                      -Durl=http://18.212.184.15:8081/repository/maven-releases/ \
                      -Dusername=admin \
                      -Dpassword=admin123
                    """
                }
            }
        }

        stage('Deploy to Tomcat') {
            steps {
                script {
                    sh """
                    curl -u tomcat:admin123 -T target/mahesh-portal.war \
                    'http://18.212.184.15:8080/manager/text/deploy?path=/mahesh-portal&update=true'
                    """
                }
            }
        }
    }

    post {
        always {
            echo 'Build finished!'
        }
        failure {
            echo 'Build failed. Check logs!'
        }
    }
}

