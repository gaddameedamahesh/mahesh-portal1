pipeline {
    agent any

    tools {
        // Use the exact names from Jenkins Global Tool Configuration
        maven 'maven3'      // Maven installation name
        jdk 'java17'        // JDK installation name
    }

    environment {
        JAVA_HOME = tool 'java17' // Make sure this matches the JDK tool name
        PATH = "${JAVA_HOME}/bin:${env.PATH}"
        MVN_HOME = tool 'maven3'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/gaddameedamahesh/mahesh-portal1.git', credentialsId: 'github-creds'
            }
        }

        stage('Build') {
            steps {
                sh "${MVN_HOME}/bin/mvn clean install"
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('SonarQube') { // Replace with your actual SonarQube installation name
                    sh "${MVN_HOME}/bin/mvn sonar:sonar"
                }
            }
        }

        stage('Upload to Nexus') {
            steps {
                nexusArtifactUploader(
                    nexusVersion: 'nexus3',
                    protocol: 'http',
                    nexusUrl: 'nexus.example.com', // Replace with your Nexus URL
                    groupId: 'devops',
                    version: '1.0-SNAPSHOT',
                    repository: 'maven-releases', // Replace with your repository
                    credentialsId: 'nexus-creds',  // Nexus credentials in Jenkins
                    artifacts: [
                        [artifactId: 'mahesh-portal', classifier: '', file: 'target/mahesh-portal.war', type: 'war']
                    ]
                )
            }
        }

        stage('Deploy to Tomcat') {
            steps {
                // Using curl to deploy WAR to Tomcat manager
                sh """
                curl -u tomcatUser:tomcatPass -T target/mahesh-portal.war \
                http://tomcat.example.com:8080/manager/text/deploy?path=/mahesh-portal&update=true
                """
            }
        }
    }

    post {
        success {
            echo "Pipeline completed successfully!"
        }
        failure {
            echo "Build failed. Check the logs for details!"
        }
    }
}

